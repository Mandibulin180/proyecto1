server.port=0
spring.application.name = orders-service
# Credenciales de base de datos
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/Orders-microservice
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true
# Eureka config
eureka.client.service-url.default-zone=http://eureka:passwordlocalhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring-application.instance_id:${random.value}}

#keycloak
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/microservices-realm/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/microservices-realm
jwt.auth.converter.resource-id=microservice_client
jwt.auth.converter.principle-attribute=preferred_username

#Kafka

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.retries=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#Resilience4j - Circuit Breaker
resilience4j.circuitbreaker.instances.orders-service.register-health-indicator=true
resilience4j.circuitbreaker.instances.orders-service.sliding-window-size=5
resilience4j.circuitbreaker.instances.orders-service.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.orders-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.orders-service.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.orders-service.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.orders-service.permitted-number-of-calls-in-half-open-state=3

#Actuator
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator/orders
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true